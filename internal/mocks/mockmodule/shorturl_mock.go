// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/module/shorturl.go

// Package mockmodule is a generated GoMock package.
package mockmodule

import (
	context "context"
	reflect "reflect"

	dto "github.com/Erwin011895/shorty-challenge/pkg/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockShortURLModuleWrapper is a mock of ShortURLModuleWrapper interface.
type MockShortURLModuleWrapper struct {
	ctrl     *gomock.Controller
	recorder *MockShortURLModuleWrapperMockRecorder
}

// MockShortURLModuleWrapperMockRecorder is the mock recorder for MockShortURLModuleWrapper.
type MockShortURLModuleWrapperMockRecorder struct {
	mock *MockShortURLModuleWrapper
}

// NewMockShortURLModuleWrapper creates a new mock instance.
func NewMockShortURLModuleWrapper(ctrl *gomock.Controller) *MockShortURLModuleWrapper {
	mock := &MockShortURLModuleWrapper{ctrl: ctrl}
	mock.recorder = &MockShortURLModuleWrapperMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockShortURLModuleWrapper) EXPECT() *MockShortURLModuleWrapperMockRecorder {
	return m.recorder
}

// GetStats mocks base method.
func (m *MockShortURLModuleWrapper) GetStats(ctx context.Context, shortcode string) (dto.ResponseGetStats, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStats", ctx, shortcode)
	ret0, _ := ret[0].(dto.ResponseGetStats)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStats indicates an expected call of GetStats.
func (mr *MockShortURLModuleWrapperMockRecorder) GetStats(ctx, shortcode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStats", reflect.TypeOf((*MockShortURLModuleWrapper)(nil).GetStats), ctx, shortcode)
}

// GetURL mocks base method.
func (m *MockShortURLModuleWrapper) GetURL(ctx context.Context, shortcode string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetURL", ctx, shortcode)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetURL indicates an expected call of GetURL.
func (mr *MockShortURLModuleWrapperMockRecorder) GetURL(ctx, shortcode interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetURL", reflect.TypeOf((*MockShortURLModuleWrapper)(nil).GetURL), ctx, shortcode)
}

// ShortenURL mocks base method.
func (m *MockShortURLModuleWrapper) ShortenURL(ctx context.Context, body *dto.BodyPostShortenURL) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ShortenURL", ctx, body)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ShortenURL indicates an expected call of ShortenURL.
func (mr *MockShortURLModuleWrapperMockRecorder) ShortenURL(ctx, body interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ShortenURL", reflect.TypeOf((*MockShortURLModuleWrapper)(nil).ShortenURL), ctx, body)
}
